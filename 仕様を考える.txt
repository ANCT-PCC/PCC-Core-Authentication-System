・前提として、「認証フェーズはすべてPCC-CASで行い、各アプリケーションには認証結果のみを返却」
・基本はPCC-CASで認証を行うが、アカウントの認証情報を用いて、アプリケーション側で認証後のユーザのアクセス制御ができるようにする
　→例として、「役員はアクセス許可したいが、部員は通したくない」などのシステムがあった場合は
　　そのシステム側で役職持ちなのかを判別できるようにする。
　　→認証後に各アプリケーションに返すデータとして
        ・認証の可否(認証成功:0 ログイン情報の誤り:-1 ユーザ登録なし:1)、ユーザ名、学年、学科、メアド、Discordユーザ名、役職名
        　(認証に失敗した場合、認証の可否以外のデータはすべて"NoInfo"として返す。)

・アクセストークンなどは、PCC-CAS側では管理せずに、各アプリケーションにて管理する。(セッションの管理などは管轄外)
・あくまでも、認証専門で。
・ユーザ用にパスワード・Discordユーザ名変更ページを作成する。

・いくつかの言語で、このPCC-CASの認証機能を簡単に使えるように
　ライブラリを作成しておく
　→Pythonのほかに何か作っておいたほうがよさそうなもの

【PCC-CASの本体の仕様】
・データベースサーバとして、MySQLを使用する。
・言語はPythonでいいや

【データベースの設計】
・記録形式
　pcc-usersテーブル
　学年,学科,表示名,ユーザ名,パスワードのハッシュ,email,discord,役職,ユーザ設定画面のアクセストークン
　grade,mesc,displayname,uname,passwd,email,discord,post,setting_token